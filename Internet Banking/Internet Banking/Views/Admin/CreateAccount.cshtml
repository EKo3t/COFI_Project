@model Internet_Banking.Models.AccountDetailModel
@{
    ViewBag.Title = "Create";
}

<h2>Создание счёта</h2>
@{Html.EnableClientValidation(true);}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Users)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.UserId, Model.Users)
            @Html.ValidationMessageFor(model => model.Users)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Number, new Dictionary<string, object> { { "readonly", "true" } })
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AccountType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AccountType.AccountTypeId, Model.AccountTypes)
            @Html.ValidationMessageFor(model => model.AccountType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount, "{0:0.00}")
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Currency)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Currency, Model.Currencies)
            @Html.ValidationMessageFor(model => model.Currency)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartDate, "{0:dd/MM/yyyy}", new Dictionary<string, object> { { "readonly", "true" } })
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OverdraftLimit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OverdraftLimit, "{0:0.00}")
            @Html.ValidationMessageFor(model => model.OverdraftLimit)
        </div>

        <p>
            @if (ViewBag.Created == false)
            {
                <input type="submit" value="Создать"  />
            }
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Назад", "Dashboard")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
