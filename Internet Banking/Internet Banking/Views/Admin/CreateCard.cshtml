@model Internet_Banking.Models.CardDetailModel

@{
    ViewBag.Title = "CreateCard";
}

<h2>Создание карты</h2>
@{Html.EnableClientValidation(true);}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.Accounts)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.AccountId, Model.Accounts)
            @Html.ValidationMessageFor(model => model.Accounts)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Number, "Номер карты:")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Number, new Dictionary<string, object> { { "readonly", "true" } })
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserSignature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserSignature)
            @Html.ValidationMessageFor(model => model.UserSignature)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartDate, "{0:dd/MM/yyyy}", new Dictionary<string, object> { { "readonly", "true" } })
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Durations)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Duration, Model.Durations)
            @Html.ValidationMessageFor(model => model.Durations)
        </div>

        @*<div class="editor-label">
            @Html.Label("Срок действия")
        </div>
        <div class="editor-field">
            @{
                var listItems = new List<SelectListItem>
                {
                    new SelectListItem {Text = "1 год", Value = "1"}, 
                    new SelectListItem {Text = "2 года", Value = "2", Selected = true}, 
                    new SelectListItem {Text = "3 года", Value = "3"}, 
                    new SelectListItem {Text = "4 года", Value = "4"}};
            }
            @Html.DropDownList("selectedDuration", listItems)
        </div>*@

        @*<div class="editor-label">
            @Html.LabelFor(model => model.State, "Статус карты:")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.State, ViewBag.CardStatus as SelectList)
            @Html.ValidationMessageFor(model => model.State)
        </div>*@
        
        <div class="editor-label">
            @Html.LabelFor(model => model.CardStates)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.State, Model.CardStates)
            @Html.ValidationMessageFor(model => model.CardStates)
        </div>
        <p>
            @if (ViewBag.Created == false)
            {
                <input type="submit" value="Создать" />
            }
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Назад", "Dashboard")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
